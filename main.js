!function(){class t{constructor(t){this.description=t,this.completed=!1}toggleCompleted(){this.completed=!this.completed}toHTML(t){return`<li><input type="checkbox" ${this.completed?"checked":""} data-index="${t}"><span>${this.description}</span><button class="delete-button">Delete</button></li>`}}class e{constructor(){this.tasks=[]}addTask(e){const s=new t(e);this.tasks.push(s)}removeTask(t){this.tasks.splice(t,1)}toggleTaskCompleted(t){this.tasks[t].toggleCompleted()}toHTML(){return this.tasks.map(((t,e)=>t.toHTML(e))).join("")}}new class{constructor(){this.todoList=new e,this.form=document.getElementById("todo-form"),this.input=document.getElementById("todo-input"),this.list=document.getElementById("todo-list"),this.render(),this.form.addEventListener("submit",(t=>this.handleFormSubmit(t))),this.list.addEventListener("click",(t=>this.handleListClick(t)))}render(){this.list.innerHTML=this.todoList.toHTML()}handleFormSubmit(t){t.preventDefault();const e=this.input.value;e&&(this.todoList.addTask(e),this.input.value="",this.render())}handleListClick(t){const e=t.target;if("INPUT"===e.tagName){const t=parseInt(e.dataset.index);this.todoList.toggleTaskCompleted(t),this.render()}else if(e.classList.contains("delete-button")){const t=parseInt(e.parentNode.dataset.index);this.todoList.removeTask(t),this.render()}}}}();